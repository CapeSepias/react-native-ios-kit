[{"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/babel.config.js":"1","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/commitlint.config.js":"2","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/App.js":"3","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/babel.config.js":"4","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/metro.config.js":"5","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/ExampleList.js":"6","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/ThemeSelector.js":"7","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Avatars.js":"8","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Buttons.js":"9","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Collection.js":"10","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/GroupedList.js":"11","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Icons.js":"12","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/PageControl.js":"13","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/PageControlView.js":"14","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/SearchBar.js":"15","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/SegmentedControl.js":"16","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Slider.js":"17","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Spinners.js":"18","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Stepper.js":"19","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Switch.js":"20","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/TabBar.js":"21","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/TableView.js":"22","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/TextField.js":"23","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Toolbar.js":"24","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Typography.js":"25","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/withSafeArea.js":"26","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Avatar.js":"27","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Button.js":"28","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/CheckboxRow.js":"29","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Collection.js":"30","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/GroupedList/GroupedList.js":"31","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/GroupedList/Sections.js":"32","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/GroupedList/index.js":"33","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Icon.js":"34","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/InfoRow.js":"35","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/NavigationRow.js":"36","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/PageControl.js":"37","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/PageControlView.js":"38","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/ProgressBar.js":"39","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/RowItem.js":"40","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/SearchBar.js":"41","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/SegmentedControl.js":"42","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Slider.js":"43","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Spinner.js":"44","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Stepper.js":"45","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Switch.js":"46","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/SwitchRow.js":"47","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TabBar.js":"48","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/TableView.js":"49","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/TableViewFooter.js":"50","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/TableViewHeader.js":"51","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/index.js":"52","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TextField.js":"53","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TextFieldRow.js":"54","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Toolbar.js":"55","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/StyledText.js":"56","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/Typography.js":"57","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/createText.js":"58","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/index.js":"59","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/core/ThemeProvider.js":"60","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/core/theming.js":"61","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/index.js":"62","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/styles/DarkTheme.js":"63","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/styles/DefaultTheme.js":"64","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/styles/colors.js":"65","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/types/Theme.js":"66","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/types.js":"67"},{"size":77,"mtime":1558703993248,"results":"68","hashOfConfig":"69"},{"size":70,"mtime":1588068336997,"results":"70","hashOfConfig":"69"},{"size":3276,"mtime":1587984321258,"results":"71","hashOfConfig":"72"},{"size":295,"mtime":1587984321260,"results":"73","hashOfConfig":"72"},{"size":1085,"mtime":1587984321261,"results":"74","hashOfConfig":"72"},{"size":2829,"mtime":1587990299752,"results":"75","hashOfConfig":"72"},{"size":1456,"mtime":1587984321263,"results":"76","hashOfConfig":"72"},{"size":1398,"mtime":1587984321264,"results":"77","hashOfConfig":"72"},{"size":3148,"mtime":1587984321264,"results":"78","hashOfConfig":"72"},{"size":1614,"mtime":1587984321265,"results":"79","hashOfConfig":"72"},{"size":1522,"mtime":1587984321265,"results":"80","hashOfConfig":"72"},{"size":2312,"mtime":1587990299753,"results":"81","hashOfConfig":"72"},{"size":2043,"mtime":1587990299753,"results":"82","hashOfConfig":"72"},{"size":2102,"mtime":1587984321267,"results":"83","hashOfConfig":"72"},{"size":803,"mtime":1587984321267,"results":"84","hashOfConfig":"72"},{"size":1292,"mtime":1587984321267,"results":"85","hashOfConfig":"72"},{"size":1865,"mtime":1587984321268,"results":"86","hashOfConfig":"72"},{"size":1827,"mtime":1587984321268,"results":"87","hashOfConfig":"72"},{"size":2094,"mtime":1587984321268,"results":"88","hashOfConfig":"72"},{"size":1218,"mtime":1587990299754,"results":"89","hashOfConfig":"72"},{"size":1696,"mtime":1587984321269,"results":"90","hashOfConfig":"72"},{"size":3006,"mtime":1587984321270,"results":"91","hashOfConfig":"72"},{"size":1120,"mtime":1587990299755,"results":"92","hashOfConfig":"72"},{"size":1247,"mtime":1587984321271,"results":"93","hashOfConfig":"72"},{"size":1124,"mtime":1587984321271,"results":"94","hashOfConfig":"72"},{"size":447,"mtime":1587984321271,"results":"95","hashOfConfig":"72"},{"size":2100,"mtime":1587990299761,"results":"96","hashOfConfig":"69"},{"size":4895,"mtime":1587990299761,"results":"97","hashOfConfig":"69"},{"size":799,"mtime":1558703993265,"results":"98","hashOfConfig":"69"},{"size":3230,"mtime":1587990299762,"results":"99","hashOfConfig":"69"},{"size":5223,"mtime":1587990299762,"results":"100","hashOfConfig":"69"},{"size":4619,"mtime":1587990299763,"results":"101","hashOfConfig":"69"},{"size":41,"mtime":1556198258668,"results":"102","hashOfConfig":"69"},{"size":2090,"mtime":1587990299763,"results":"103","hashOfConfig":"69"},{"size":609,"mtime":1558703993267,"results":"104","hashOfConfig":"69"},{"size":1198,"mtime":1587126277760,"results":"105","hashOfConfig":"69"},{"size":2560,"mtime":1587990299763,"results":"106","hashOfConfig":"69"},{"size":3390,"mtime":1558703993269,"results":"107","hashOfConfig":"69"},{"size":519,"mtime":1558703993270,"results":"108","hashOfConfig":"69"},{"size":3462,"mtime":1587990299764,"results":"109","hashOfConfig":"69"},{"size":6470,"mtime":1587990299764,"results":"110","hashOfConfig":"69"},{"size":1167,"mtime":1587990299765,"results":"111","hashOfConfig":"69"},{"size":2338,"mtime":1558703993272,"results":"112","hashOfConfig":"69"},{"size":785,"mtime":1556198258669,"results":"113","hashOfConfig":"69"},{"size":5489,"mtime":1587990299765,"results":"114","hashOfConfig":"69"},{"size":937,"mtime":1587029146298,"results":"115","hashOfConfig":"69"},{"size":647,"mtime":1558703993274,"results":"116","hashOfConfig":"69"},{"size":2744,"mtime":1558703993275,"results":"117","hashOfConfig":"69"},{"size":1935,"mtime":1558703993275,"results":"118","hashOfConfig":"69"},{"size":1346,"mtime":1558703993276,"results":"119","hashOfConfig":"69"},{"size":984,"mtime":1558703993277,"results":"120","hashOfConfig":"69"},{"size":64,"mtime":1558703993277,"results":"121","hashOfConfig":"69"},{"size":2229,"mtime":1558703993278,"results":"122","hashOfConfig":"69"},{"size":1450,"mtime":1587990299765,"results":"123","hashOfConfig":"69"},{"size":2481,"mtime":1558703993279,"results":"124","hashOfConfig":"69"},{"size":1451,"mtime":1587990299766,"results":"125","hashOfConfig":"69"},{"size":1133,"mtime":1556198258672,"results":"126","hashOfConfig":"69"},{"size":320,"mtime":1558703993281,"results":"127","hashOfConfig":"69"},{"size":153,"mtime":1556198258673,"results":"128","hashOfConfig":"69"},{"size":403,"mtime":1558703993282,"results":"129","hashOfConfig":"69"},{"size":342,"mtime":1587130231970,"results":"130","hashOfConfig":"69"},{"size":1821,"mtime":1587990299766,"results":"131","hashOfConfig":"69"},{"size":602,"mtime":1587990299767,"results":"132","hashOfConfig":"69"},{"size":616,"mtime":1587990299768,"results":"133","hashOfConfig":"69"},{"size":713,"mtime":1556198258674,"results":"134","hashOfConfig":"69"},{"size":321,"mtime":1587990299768,"results":"135","hashOfConfig":"69"},{"size":100,"mtime":1556198258674,"results":"136","hashOfConfig":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lcdvdi",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4tj66p",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/babel.config.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/commitlint.config.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/App.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/babel.config.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/metro.config.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/ExampleList.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/ThemeSelector.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Avatars.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Buttons.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Collection.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/GroupedList.js",["282"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { GroupedList, withTheme, Body } from 'react-native-ios-kit';\n\nimport withSafeArea from '../withSafeArea';\nimport type { Theme } from 'react-native-ios-kit/types';\n\ntype Props = {\n  theme: Theme,\n  navigator: Object,\n};\n\ntype Item = {\n  key: number,\n  name: string,\n  group: string,\n};\n\ntype State = {\n  data: Array<Item>,\n  sections: Array<string>,\n};\n\nclass AvatarExample extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const mockedData = [...new Array(150)].map((val, idx) => {\n      const group = `${idx % 40}`;\n      const name = `${group} name`;\n      return { key: idx, name, group };\n    });\n\n    const mockedSections = [...new Array(40)].map((i, idx) => idx.toString());\n\n    this.state = {\n      data: mockedData,\n      sections: mockedSections,\n    };\n  }\n\n  state = {\n    data: [],\n    sections: [],\n  };\n\n  groupBy = (item: Item) => item.group;\n\n  renderItem = ({ item }) => (\n    <View style={styles.item}>\n      <Body>{item.name}</Body>\n    </View>\n  );\n\n  render() {\n    return (\n      <View>\n        <GroupedList\n          items={this.state.data}\n          sections={this.state.sections}\n          renderItem={this.renderItem}\n          groupBy={this.groupBy}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    paddingHorizontal: 15,\n    paddingVertical: 5,\n  },\n});\n\nexport default withTheme(withSafeArea(AvatarExample));\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Icons.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/PageControl.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/PageControlView.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/SearchBar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/SegmentedControl.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Slider.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Spinners.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Stepper.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Switch.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/TabBar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/TableView.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/TextField.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Toolbar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/scenes/Typography.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/example/src/withSafeArea.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Avatar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Button.js",["283","284"],"/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native';\n\nimport type { Theme } from '../types/Theme';\nimport type {\n  TextStyleProp,\n  ViewStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport { withTheme } from '../';\n\ntype Props = {\n  /**\n   * Set custom font color\n   */\n  color?: string,\n  /**\n   * Disable the button\n   */\n  disabled?: boolean,\n  /**\n   * Disable automatic horizontal resize\n   * The button will only occupy width it needs, instead of 100%\n   */\n  inline?: boolean,\n  /**\n   * Center text inside the button\n   * Applies only if rounded prop is not true\n   */\n  centered?: boolean,\n  /**\n   * Set rounded border corners\n   */\n  rounded?: boolean,\n  /**\n   * Invert font color with background color\n   * Applies only if rounded prop is true\n   */\n  inverted?: boolean,\n  /**\n   * Function to call when the touch is released\n   */\n  onPress?: () => void,\n  onPressIn?: () => void,\n  onPressOut?: () => void,\n  onLongPress?: () => void,\n  /**\n   * Global theme to use\n   */\n  theme: Theme,\n  /**\n   * Custom styles to apply to the button\n   */\n  style?: ViewStyleProp,\n  /**\n   * Custom styles to apply to text inside the button\n   */\n  innerStyle?: TextStyleProp,\n  /**\n   * Custom styles to apply to the button\n   */\n  disabledStyle?: ViewStyleProp,\n  children: React.Element<*> | React.Element<*>[] | string,\n};\n\nclass Button extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.styles = getStyles(this.props.theme);\n  }\n\n  styles: Object;\n\n  _styleFromProps() {\n    const { centered, rounded, inverted, color, disabled } = this.props;\n    const styleFromProps: Object[] = [];\n\n    const appliedStyleProps = {\n      centered,\n      rounded,\n      disabled,\n      inverted,\n    };\n\n    Object.keys(appliedStyleProps).forEach(key => {\n      const value = appliedStyleProps[key];\n      if (value) {\n        styleFromProps[styleFromProps.length] = this.styles[key];\n      }\n    });\n\n    if (disabled && rounded) {\n      styleFromProps[styleFromProps.length] = inverted\n        ? this.styles.invertedDisabled\n        : this.styles.roundedDisabled;\n    }\n\n    if (color && !disabled) {\n      styleFromProps[styleFromProps.length] = {\n        inner: { color },\n      };\n    }\n\n    return {\n      inner: styleFromProps.map(style => style.inner),\n      container: styleFromProps.map(style => style.container),\n    };\n  }\n\n  _renderButton(markup) {\n    if (this.props.inline) {\n      const wrapperStyle = {\n        flexDirection: 'row',\n      };\n      if (this.props.centered) {\n        // $FlowFixMe\n        wrapperStyle.justifyContent = 'center';\n      }\n      return <View style={wrapperStyle}>{markup}</View>;\n    }\n    return markup;\n  }\n\n  render() {\n    const { inner, container } = this._styleFromProps();\n\n    const children =\n      typeof this.props.children === 'string' ? (\n        <Text\n          style={[this.styles.default.inner, ...inner, this.props.innerStyle]}\n        >\n          {this.props.children}\n        </Text>\n      ) : (\n        this.props.children\n      );\n\n    return this._renderButton(\n      <TouchableOpacity\n        disabled={this.props.disabled}\n        onPress={this.props.onPress}\n        onPressIn={this.props.onPressIn}\n        onPressOut={this.props.onPressOut}\n        onLongPress={this.props.onLongPress}\n        accessibilityRole=\"button\"\n        style={[\n          this.styles.default.container,\n          ...container,\n          this.props.style,\n          this.props.disabledStyle,\n        ]}\n      >\n        {children}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst getStyles = (theme: Theme) => {\n  const { primaryColor, disabledColor } = theme;\n\n  return {\n    default: StyleSheet.create({\n      inner: {\n        textAlign: 'left',\n        fontWeight: 'normal',\n        fontSize: 17,\n        color: primaryColor,\n      },\n    }),\n    disabled: {\n      inner: {\n        color: disabledColor,\n      },\n    },\n    centered: StyleSheet.create({\n      inner: {\n        textAlign: 'center',\n      },\n    }),\n    rounded: StyleSheet.create({\n      inner: {\n        fontSize: 14,\n        textAlign: 'center',\n      },\n      container: {\n        borderWidth: 1,\n        borderColor: primaryColor,\n        borderRadius: 8,\n        justifyContent: 'center',\n        padding: 10,\n      },\n    }),\n    roundedDisabled: StyleSheet.create({\n      container: {\n        borderColor: disabledColor,\n      },\n    }),\n    inverted: StyleSheet.create({\n      inner: {\n        color: '#ffffff',\n      },\n      container: {\n        backgroundColor: primaryColor,\n      },\n    }),\n    invertedDisabled: StyleSheet.create({\n      // eslint-disable-next-line react-native/no-unused-styles\n      container: {\n        backgroundColor: disabledColor,\n        borderColor: disabledColor,\n      },\n    }),\n  };\n};\n\nexport default withTheme(Button);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/CheckboxRow.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Collection.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/GroupedList/GroupedList.js",["285","286","287","288","289","290","291","292","293","294","295"],"/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet, SectionList } from 'react-native';\n\nimport Sections from './Sections';\nimport { withTheme } from '../../core/theming';\nimport { Headline } from '../Typography';\n\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type { Theme } from '../../types/Theme';\n\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ#'.split('');\n\ntype Props = {\n  theme: Theme,\n  items: Array<any>,\n  groupBy: (item: any) => string,\n  renderItem: (data: { item: *, index: number }) => ?React.Element<*>,\n  renderSectionHeader?: (data: {\n    section: any,\n  }) => ?React.Element<*>,\n  renderSectionFooter?: (data: {\n    section: any,\n  }) => ?React.Element<*>,\n  ItemSeparatorComponent?: React.ComponentType<*>,\n  SectionSeparatorComponent: *,\n  sections?: Array<string>,\n  sectionsStyle?: ViewStyleProp,\n  sectionPrimaryColor?: string,\n  getItemLayout?: (\n    data: any,\n    index: number\n  ) => { length: number, offset: number, index: number },\n  stickySectionHeadersEnabled?: boolean,\n  keyExtractor?: (item: *) => string,\n};\n\ntype State = {\n  dataSource?: Object,\n};\n\nclass GroupedList extends React.PureComponent<Props, State> {\n  sectionList: ?Object = undefined;\n  sectionHeadersHeights: { [key: string]: number } = {};\n\n  groupItems(items: Array<Object>): any {\n    const grouped = items.reduce((acc, item) => {\n      const groupId = this.props.groupBy(item);\n      if (Object.prototype.hasOwnProperty.call(acc, groupId)) {\n        acc[groupId].data.push(item);\n      } else {\n        acc[groupId] = { title: groupId, data: [item] };\n      }\n      return acc;\n    }, {});\n\n    return Object.values(grouped);\n  }\n\n  handleSectionPress = (sectionIdx: number) => {\n    const sections = this.props.sections || alphabet;\n\n    const { index } = sections.reduce(\n      (acc, item, currendIndex) => {\n        const newDelta = Math.abs(sectionIdx - currendIndex);\n        if (newDelta < acc.delta) {\n          return { delta: newDelta, index: currendIndex };\n        }\n        return acc;\n      },\n      { delta: sections.length, index: 0 }\n    );\n\n    if (this.sectionList) {\n      this.sectionList.scrollToLocation({\n        viewOffset:\n          this.props.stickySectionHeadersEnabled !== false\n            ? this.sectionHeadersHeights[sections[index]]\n            : 0,\n        sectionIndex: index,\n        itemIndex: 0,\n        animated: false,\n      });\n    }\n  };\n\n  renderSectionHeader = (data: { section: any }) => {\n    if (this.props.renderSectionHeader) {\n      return (\n        <View\n          onLayout={({\n            nativeEvent: {\n              layout: { height },\n            },\n          }) => this.handleSectionHeaderLayout(height, data)}\n        >\n          {this.props.renderSectionHeader(data)}\n        </View>\n      );\n    }\n\n    return (\n      <View\n        style={[styles.header, { backgroundColor: this.props.theme.barColor }]}\n        onLayout={({\n          nativeEvent: {\n            layout: { height },\n          },\n        }) => this.handleSectionHeaderLayout(height, data)}\n      >\n        <Headline>\n          {data.section &&\n            typeof data.section === 'object' &&\n            data.section.title}\n        </Headline>\n      </View>\n    );\n  };\n\n  handleSectionHeaderLayout = (height: number, data: Object) => {\n    this.sectionHeadersHeights[data.section.title] = height;\n  };\n\n  render() {\n    const {\n      sections,\n      sectionsStyle,\n      sectionPrimaryColor,\n      getItemLayout,\n      ItemSeparatorComponent,\n      SectionSeparatorComponent,\n      items,\n      renderItem,\n      renderSectionFooter,\n      stickySectionHeadersEnabled,\n      keyExtractor,\n    } = this.props;\n\n    const deafultKeyExtractor = item => item.key || item.id;\n\n    const Separator = () => (\n      <View\n        style={[\n          styles.separator,\n          { backgroundColor: this.props.theme.barColor },\n        ]}\n      />\n    );\n\n    return (\n      <View style={styles.container}>\n        <SectionList\n          initialNumToRender={getItemLayout ? 30 : Number.MAX_SAFE_INTEGER}\n          ref={sectionList => {\n            this.sectionList = sectionList;\n          }}\n          renderItem={renderItem}\n          renderSectionFooter={renderSectionFooter}\n          renderSectionHeader={this.renderSectionHeader}\n          ItemSeparatorComponent={ItemSeparatorComponent || Separator}\n          SectionSeparatorComponent={SectionSeparatorComponent}\n          sections={this.groupItems(items)}\n          automaticallyAdjustContentInsets={false}\n          getItemLayout={getItemLayout}\n          stickySectionHeadersEnabled={stickySectionHeadersEnabled}\n          keyExtractor={keyExtractor || deafultKeyExtractor}\n        />\n        <Sections\n          onSectionPress={this.handleSectionPress}\n          items={sections || alphabet}\n          style={sectionsStyle}\n          sectionPrimaryColor={sectionPrimaryColor}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexGrow: 1,\n  },\n  header: {\n    paddingVertical: 5,\n    paddingHorizontal: 15,\n  },\n  separator: {\n    height: 1,\n    marginLeft: 15,\n  },\n});\n\nexport default withTheme(GroupedList);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/GroupedList/Sections.js",["296","297","298"],"/* @flow */\n\nimport React, { PureComponent } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  PanResponder,\n  findNodeHandle,\n  NativeModules,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\n\nimport type { Theme } from '../../types/Theme';\n\nconst SECTION_HEIGHT = 18;\n\ntype Props = {\n  theme: Theme,\n  onSectionPress: (id: number) => void,\n  items: Array<string>,\n  sectionPrimaryColor: ?string,\n  style: ?*,\n};\n\ntype State = {\n  sections: Array<?string>,\n};\n\nclass Sections extends PureComponent<Props, State> {\n  state = {\n    sections: [],\n  };\n\n  UNSAFE_componentWillMount() {\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderMove: this.handleMove,\n      onPanResponderGrant: this.handleMove,\n    });\n  }\n\n  sectionsHeight: ?number;\n  sectionsY: ?number;\n  panResponder: Object;\n  sections: ?any;\n  currentSectionIdx: ?number;\n\n  handleContainerLayout = ({\n    nativeEvent: {\n      layout: { height },\n    },\n  }) => {\n    this.setState({ sections: this.prepareSections(height) });\n  };\n\n  handleLayout = () => {\n    NativeModules.UIManager.measure(\n      findNodeHandle(this.sections),\n      (x, y, width, height, pageX, pageY) => {\n        this.sectionsHeight = height;\n        this.sectionsY = pageY;\n      }\n    );\n  };\n\n  handleMove = ({ nativeEvent: { pageY } }) => {\n    if (!this.sectionsHeight || !this.sectionsY) {\n      return;\n    }\n\n    const sectionIdx = Math.round(\n      ((pageY - this.sectionsY) * this.props.items.length) / this.sectionsHeight\n    );\n    if (\n      sectionIdx >= 0 &&\n      sectionIdx < this.props.items.length &&\n      this.currentSectionIdx !== sectionIdx\n    ) {\n      this.currentSectionIdx = sectionIdx;\n      this.props.onSectionPress(sectionIdx);\n    }\n  };\n\n  prepareSections(parentHeight: number): Array<?string> {\n    const { items } = this.props;\n\n    let slots = (parentHeight - 50) / SECTION_HEIGHT;\n    if (slots >= items.length) {\n      return [...items];\n    }\n\n    if (!(slots % 2)) {\n      slots += 1;\n    }\n\n    const dotsCount = Math.floor(slots / 2);\n    const visibleSectionsCount = slots - dotsCount;\n    const sectionsCountPerDot =\n      (items.length - visibleSectionsCount) / dotsCount;\n\n    let sum = 0;\n    const visibleSections = [items[0], null]; // make first item visible\n    for (let i = 0; i < dotsCount - 1; i++) {\n      sum += 1 + sectionsCountPerDot;\n      const visibleSectionIdx = Math.round(sum);\n      visibleSections.push(items[visibleSectionIdx], null);\n    }\n    visibleSections.push(items[items.length - 1]); // make last item visible\n    // Each null in visbleSections array is a dot\n    return visibleSections;\n  }\n\n  renderSection = (item: any, index: number) => {\n    const { sectionPrimaryColor, theme } = this.props;\n    if (item) {\n      return (\n        <Text\n          key={index}\n          style={[\n            { color: sectionPrimaryColor || theme.primaryColor },\n            styles.section,\n          ]}\n        >\n          {item}\n        </Text>\n      );\n    }\n    return (\n      <View key={index} style={styles.dotContainer}>\n        <View\n          style={[\n            { backgroundColor: sectionPrimaryColor || theme.primaryColor },\n            styles.dot,\n          ]}\n        />\n      </View>\n    );\n  };\n\n  render() {\n    const { style, theme } = this.props;\n    const { sections } = this.state;\n\n    return (\n      <View\n        style={[\n          { backgroundColor: theme.barColor },\n          styles.container,\n          style && style,\n        ]}\n        onLayout={this.handleContainerLayout}\n      >\n        <View\n          style={styles.sections}\n          {...this.panResponder.panHandlers}\n          onLayout={this.handleLayout}\n          ref={view => {\n            this.sections = view;\n          }}\n        >\n          {sections.map(this.renderSection)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 20,\n    maxWidth: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sections: {\n    width: 45,\n  },\n  section: {\n    fontSize: 14,\n    height: SECTION_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  dotContainer: {\n    height: SECTION_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n});\n\nexport default withTheme(Sections);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/GroupedList/index.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Icon.js",["299","300"],"/* @flow */\nimport * as React from 'react';\nimport { Image, View, StyleSheet } from 'react-native';\nimport type { ImageSource } from 'react-native/Libraries/Image/ImageSource';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport type { Theme } from '../types/Theme';\nimport { withTheme } from '../';\n\ntype Props = {\n  /**\n   * ImageSource name. Can be one of https://github.com/oblador/react-native-vector-icons/blob/master/glyphmaps/Ionicons.json or source of ReactNative's `image` or any valid React Component\n   */\n  name?: ImageSource,\n  /**\n   * Custom color for icon, default to primary\n   */\n  color?: string,\n  /**\n   * Optional icon size, defaults to 50\n   */\n  size?: number,\n  /**\n   * Custom styles to apply to the Icon\n   */\n  style?: any,\n  /**\n   * Provided by the ThemeProvider\n   */\n  theme: Theme,\n};\n\nclass Icon extends React.Component<Props> {\n  static defaultProps = {\n    size: 50,\n  };\n  render() {\n    const { name, color, size, theme, style, ...rest } = this.props;\n    if (typeof name === 'string') {\n      return (\n        <Ionicons\n          color={color || theme.primaryColor}\n          name={name}\n          size={size}\n          style={style}\n        />\n      );\n    } else if (\n      (typeof name === 'object' &&\n        name !== null &&\n        // eslint-disable-next-line\n        (name.hasOwnProperty('uri') && typeof name.uri === 'string')) ||\n      typeof name === 'number'\n    ) {\n      return (\n        <Image\n          {...rest}\n          source={name}\n          style={[\n            {\n              width: size,\n              height: size,\n            },\n            style,\n          ]}\n        />\n      );\n    }\n    return (\n      <View\n        {...rest}\n        style={[\n          {\n            width: size,\n            height: size,\n          },\n          styles.container,\n          style,\n        ]}\n      >\n        {(name: any)}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(Icon);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n});\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/InfoRow.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/NavigationRow.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/PageControl.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/PageControlView.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/ProgressBar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/RowItem.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/SearchBar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/SegmentedControl.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Slider.js",["301"],"/* @flow */\nimport React, { Component } from 'react';\nimport { Slider, View, StyleSheet } from 'react-native';\nimport type { Theme } from '../types/Theme';\nimport { withTheme } from '../';\nimport Icon from './Icon';\n\ntype Props = {\n  value: number,\n  stepValue: number,\n  minValue?: number,\n  maxValue?: number,\n  minIconName?: string,\n  maxIconName?: string,\n  minIconColor?: string,\n  maxIconColor?: string,\n  minIconSize?: number,\n  maxIconSize?: number,\n  style?: any,\n  theme: Theme,\n  onValueChange: (value: number) => void,\n  onSlidingComplete?: (value: number) => void,\n  minTrackTintColor?: string,\n  maxTrackTintColor?: string,\n};\n\nclass IosSlider extends Component<Props> {\n  static defaultProps = {\n    minValue: 0,\n    maxValue: 100,\n    stepValue: 1,\n    minIconSize: 28,\n    maxIconSize: 35,\n  };\n\n  render() {\n    const {\n      value,\n      minValue,\n      maxValue,\n      stepValue,\n      minIconName,\n      maxIconName,\n      minIconColor,\n      maxIconColor,\n      minIconSize,\n      maxIconSize,\n      theme,\n      style,\n      onValueChange,\n      minTrackTintColor,\n      maxTrackTintColor,\n      ...rest\n    } = this.props;\n    return (\n      <View style={[styles.container, style]}>\n        {minIconName && (\n          <Icon\n            style={styles.icon}\n            name={minIconName}\n            size={minIconSize}\n            color={minIconColor || theme.placeholderColor}\n          />\n        )}\n        <Slider\n          style={styles.slider}\n          value={value}\n          minimumValue={minValue}\n          maximumValue={maxValue}\n          step={stepValue}\n          onValueChange={onValueChange}\n          minimumTrackTintColor={minTrackTintColor || theme.primaryColor}\n          maximumTrackTintColor={maxTrackTintColor || theme.dividerColor}\n          {...rest}\n        />\n        {maxIconName && (\n          <Icon\n            style={styles.icon}\n            name={maxIconName}\n            size={maxIconSize}\n            color={maxIconColor || theme.placeholderColor}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  slider: {\n    flex: 1,\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  icon: {\n    marginTop: 2,\n  },\n});\n\nexport default withTheme(IosSlider);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Spinner.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Stepper.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Switch.js",["302"],"/* @flow */\n\nimport React, { Component } from 'react';\nimport { Switch as ReactNativeSwitch } from 'react-native';\n\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types/Theme';\n\ntype Props = {\n  // Disable switch\n  disabled?: boolean,\n  // Switch value\n  value?: boolean,\n  // Switch style\n  style?: Object,\n  // Provided by the ThemeProvider\n  theme: Theme,\n  // onChange prop\n  onValueChange?: (value: boolean) => *,\n  // Border color when the switch is turned on\n  trackColor?: string,\n  // Color of the foreground switch grip\n  thumbColor?: string,\n};\n\nclass Switch extends Component<Props> {\n  render() {\n    const { theme, onValueChange, trackColor, ...rest } = this.props;\n    return (\n      <ReactNativeSwitch\n        {...rest}\n        onValueChange={onValueChange}\n        // $FlowFixMe\n        trackColor={trackColor || theme.positiveColor}\n      />\n    );\n  }\n}\n\nexport default withTheme(Switch);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/SwitchRow.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TabBar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/TableView.js",["303"],"/* @flow */\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nimport TableViewHeader from './TableViewHeader';\nimport TableViewFooter from './TableViewFooter';\nimport { withTheme } from '../../';\nimport type { Theme } from '../../types/Theme';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = {\n  /**\n   * Provided by the ThemeProvider\n   */\n  theme: Theme,\n  /**\n   * Header of TableView\n   */\n  header?: string,\n  /**\n   * Indicates whether render empty header or not\n   */\n  withoutHeader?: boolean,\n  /**\n   * Optional styles of header\n   */\n  headerStyle?: ViewStyleProp,\n  /**\n   * Footer of TableView\n   */\n  footer?: string,\n  /**\n   * Whether render empty footer or not\n   */\n  withoutFooter?: boolean,\n  /**\n   * Footer style\n   */\n  footerStyle?: ViewStyleProp,\n  /**\n   * onPress handler of Footer component\n   */\n  onFooterPress?: Function,\n  /**\n   * Children of TableView to render, e.g. RowItem's\n   */\n  children: React.ChildrenArray<*>,\n};\n\nclass TableView extends React.Component<Props> {\n  static defaultProps = {\n    header: '',\n    footer: '',\n  };\n\n  render() {\n    const {\n      header,\n      children,\n      footer,\n      withoutHeader,\n      withoutFooter,\n      headerStyle,\n      footerStyle,\n      onFooterPress,\n    } = this.props;\n    return (\n      <View>\n        {!withoutHeader && !!header && (\n          <TableViewHeader header={header} style={headerStyle} />\n        )}\n        {React.Children.map(children, (child, idx) =>\n          React.cloneElement(child, {\n            first: idx === 0,\n            last: idx === React.Children.count(children) - 1,\n          })\n        )}\n        {!withoutFooter && !!footer && (\n          <TableViewFooter\n            footer={footer}\n            onPress={onFooterPress}\n            style={footerStyle}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(TableView);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/TableViewFooter.js",["304"],"/* @flow */\nimport * as React from 'react';\nimport { View, StyleSheet, TouchableHighlight } from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport { Footnote } from '../Typography';\nimport type { Theme } from '../../types/Theme';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = {\n  footer: string,\n  theme: Theme,\n  style?: ViewStyleProp,\n  onPress?: Function,\n};\n\nclass TableViewFooter extends React.Component<Props> {\n  renderFooter = () => {\n    const { footer, theme, style, onPress } = this.props;\n    return (\n      <View\n        style={[\n          styles.footer,\n          { backgroundColor: theme.footnoteBackgroundColor },\n          style,\n        ]}\n      >\n        <Footnote\n          style={{ color: onPress ? theme.primaryColor : theme.footnoteColor }}\n        >\n          {footer}\n        </Footnote>\n      </View>\n    );\n  };\n\n  renderTouchableFooter = () => (\n    <TouchableHighlight onPress={this.props.onPress}>\n      {this.renderFooter()}\n    </TouchableHighlight>\n  );\n\n  render() {\n    return this.props.onPress\n      ? this.renderTouchableFooter()\n      : this.renderFooter();\n  }\n}\n\nexport default withTheme(TableViewFooter);\n\nconst styles = StyleSheet.create({\n  footer: {\n    paddingHorizontal: 15,\n    paddingTop: 7,\n    paddingBottom: 15,\n  },\n});\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/TableViewHeader.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TableView/index.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TextField.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/TextFieldRow.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Toolbar.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/StyledText.js",["305"],"/* @flow */\n\nimport * as React from 'react';\nimport { Text, StyleSheet } from 'react-native';\n\nimport { withTheme } from '../../';\nimport type { Theme } from '../../types/Theme';\nimport type { TextStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst trackingToSpacing = (fontSize: number, tracking: number): number =>\n  (fontSize * tracking) / 1000;\n\nconst resolveFontSizeFromStyle = (style?: TextStyleProp) => {\n  if (!style) {\n    return 0;\n  }\n\n  if (Array.isArray(style)) {\n    return style.reduce(\n      (acc, elem) => resolveFontSizeFromStyle(elem) || acc,\n      0\n    );\n  }\n\n  const realStyle =\n    typeof style === 'number' ? StyleSheet.flatten(style) : style;\n\n  return realStyle ? realStyle.fontSize : null;\n};\n\ntype Props = {\n  style?: TextStyleProp,\n  children?: React.Node,\n  config: Object,\n  theme: Theme,\n};\n\nclass StyledText extends React.Component<Props> {\n  render() {\n    const { style, children, config, theme, ...rest } = this.props;\n    const fontSize = resolveFontSizeFromStyle(style) || config.fontSize;\n    const letterSpacing = trackingToSpacing(fontSize, config.tracking);\n\n    const calculatedStyle = {\n      fontSize,\n      fontWeight: config.fontWeight,\n      letterSpacing,\n      lineHeight: config.leading,\n      color: theme.textColor,\n    };\n    return (\n      <Text style={[calculatedStyle, style]} {...rest}>\n        {children}\n      </Text>\n    );\n  }\n}\n\nexport default withTheme(StyledText);\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/Typography.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/createText.js",["306"],"/**\n * @flow\n */\nimport React from 'react';\nimport StyledText from './StyledText';\n\ntype Config = {\n  fontSize: number,\n  tracking: number,\n  leading: number,\n  fontWeight: string,\n};\n\nconst createText = (config: Config) => (props: Object) => (\n  <StyledText {...props} config={config} />\n);\n\nexport default createText;\n","/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/components/Typography/index.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/core/ThemeProvider.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/core/theming.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/index.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/styles/DarkTheme.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/styles/DefaultTheme.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/styles/colors.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/src/types/Theme.js",[],"/Users/adam/Documents/GitHub/OSS/react-native-ios-kit/types.js",[],{"ruleId":"307","severity":1,"message":"308","line":12,"column":14,"nodeType":"309","endLine":12,"endColumn":20},{"ruleId":"307","severity":1,"message":"308","line":73,"column":11,"nodeType":"309","endLine":73,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":77,"column":27,"nodeType":"309","endLine":77,"endColumn":33},{"ruleId":"307","severity":1,"message":"310","line":17,"column":16,"nodeType":"311","endLine":17,"endColumn":19},{"ruleId":"307","severity":1,"message":"310","line":18,"column":19,"nodeType":"311","endLine":18,"endColumn":22},{"ruleId":"307","severity":1,"message":"310","line":21,"column":14,"nodeType":"311","endLine":21,"endColumn":17},{"ruleId":"307","severity":1,"message":"310","line":24,"column":14,"nodeType":"311","endLine":24,"endColumn":17},{"ruleId":"307","severity":1,"message":"310","line":32,"column":11,"nodeType":"311","endLine":32,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":40,"column":16,"nodeType":"309","endLine":40,"endColumn":22},{"ruleId":"307","severity":1,"message":"308","line":44,"column":17,"nodeType":"309","endLine":44,"endColumn":23},{"ruleId":"307","severity":1,"message":"308","line":47,"column":27,"nodeType":"309","endLine":47,"endColumn":33},{"ruleId":"307","severity":1,"message":"310","line":47,"column":37,"nodeType":"311","endLine":47,"endColumn":40},{"ruleId":"307","severity":1,"message":"310","line":88,"column":43,"nodeType":"311","endLine":88,"endColumn":46},{"ruleId":"307","severity":1,"message":"308","line":121,"column":54,"nodeType":"309","endLine":121,"endColumn":60},{"ruleId":"307","severity":1,"message":"308","line":49,"column":17,"nodeType":"309","endLine":49,"endColumn":23},{"ruleId":"307","severity":1,"message":"310","line":50,"column":14,"nodeType":"311","endLine":50,"endColumn":17},{"ruleId":"307","severity":1,"message":"310","line":118,"column":26,"nodeType":"311","endLine":118,"endColumn":29},{"ruleId":"307","severity":1,"message":"310","line":26,"column":11,"nodeType":"311","endLine":26,"endColumn":14},{"ruleId":"307","severity":1,"message":"310","line":81,"column":17,"nodeType":"311","endLine":81,"endColumn":20},{"ruleId":"307","severity":1,"message":"310","line":19,"column":11,"nodeType":"311","endLine":19,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":15,"column":11,"nodeType":"309","endLine":15,"endColumn":17},{"ruleId":"307","severity":1,"message":"312","line":43,"column":19,"nodeType":"309","endLine":43,"endColumn":27},{"ruleId":"307","severity":1,"message":"312","line":14,"column":13,"nodeType":"309","endLine":14,"endColumn":21},{"ruleId":"307","severity":1,"message":"308","line":34,"column":11,"nodeType":"309","endLine":34,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":14,"column":48,"nodeType":"309","endLine":14,"endColumn":54},"flowtype/no-weak-types","Unexpected use of weak type \"Object\"","GenericTypeAnnotation","Unexpected use of weak type \"any\"","AnyTypeAnnotation","Unexpected use of weak type \"Function\""]